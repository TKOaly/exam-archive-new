services:
  db:
    networks:
      - local

  s3:
    networks:
      - local

  tarpisto:
    image: tarpisto/tarpisto:latest
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1:9030/api/health']
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
    environment:
      - PORT=${PORT:-9030}
      - PG_CONNECTION_STRING=postgresql://tarpisto:tarpisto@db:5432/tarpisto
      - USER_SERVICE_SERVICE_ID=${USER_SERVICE_SERVICE_ID}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - USER_SERVICE_SECRET=${USER_SERVICE_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_ENDPOINT=http://s3:9001
      - AWS_S3_BUCKET_ID=${AWS_S3_BUCKET_ID}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME}
      - OTEL_ENDPOINT=${OTEL_ENDPOINT}
      - OTEL_AUTHORIZATION=${OTEL_AUTHORIZATION}
      - APP_ENV=development
    ports:
      - 127.0.0.1:${PORT:-9030}:${PORT:-9030}
    networks:
      - local

networks:
  local:
    name: tarpisto-local
